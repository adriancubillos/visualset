// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// A project containing multiple tasks
model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  status      ProjectStatus @default(ACTIVE)
  color       String?  // Hex color code for project identification
  startDate   DateTime?
  endDate     DateTime?
  tasks       Task[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum ProjectStatus {
  ACTIVE
  COMPLETED
  ON_HOLD
  CANCELLED
}

// A machine in the workshop
model Machine {
  id        String        @id @default(cuid())
  name      String
  type      String
  status    MachineStatus @default(AVAILABLE)
  tasks     Task[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

enum MachineStatus {
  AVAILABLE
  IN_USE
  MAINTENANCE
  BROKEN
}

// Operator (person who works on machines/tasks)
model Operator {
  id           String         @id @default(cuid())
  name         String         @unique
  email        String?        // Optional email field
  skills       String[]       // e.g. ["CNC", "Welding"]
  status       OperatorStatus @default(ACTIVE)
  shift        String?        // e.g. "DAY", "NIGHT", "SWING"
  availability Json           // e.g. shift times { mon: "08-16", tue: "08-16" }
  tasks        Task[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

enum OperatorStatus {
  ACTIVE
  ON_LEAVE
  INACTIVE
}

// A task/job that must be assigned
model Task {
  id          String     @id @default(cuid())
  title       String
  description String?
  durationMin Int
  status      TaskStatus @default(PENDING)
  project     Project?   @relation(fields: [projectId], references: [id])
  projectId   String?
  machine     Machine?   @relation(fields: [machineId], references: [id])
  machineId   String?
  operator    Operator?  @relation(fields: [operatorId], references: [id])
  operatorId  String?
  scheduledAt DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

enum TaskStatus {
  PENDING
  SCHEDULED
  IN_PROGRESS
  COMPLETED
  BLOCKED
}
